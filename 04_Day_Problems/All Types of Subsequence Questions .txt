All Types of Subsequence Questions using Recursion

import java.util.ArrayList;

public class SubsequenceSumIsK {
    public static void main(String[] args) {
        int[] arr = new int[]{1, 2, 1};

        printSubsequence(0, 0, 2, arr, new ArrayList<>());
        printOneSubsequence(0, 0, 2, arr, new ArrayList<>());
        System.out.println(countNoOfSubsequence(0, 0, 2, arr, new ArrayList<>()));
    }

    static int countNoOfSubsequence(int index, int s, int sum, int[] arr, ArrayList<Integer> list) {
        if (index >= arr.length) {
            if (s == sum)
                return 1;
            return 0;
        }

        list.add(arr[index]);
        s += arr[index];
        int l = countNoOfSubsequence(index+1, s, sum, arr, list);

        list.remove(list.size()-1);
        s -= arr[index];
        int r = countNoOfSubsequence(index+1, s, sum, arr, list);

        return l + r;
    }

    static boolean printOneSubsequence(int index, int s, int sum, int[] arr, ArrayList<Integer> list) {
        if (index >= arr.length) {
            if (s == sum) {
                System.out.println(list);
                return true;
            }
            return false;
        }

        list.add(arr[index]);
        s += arr[index];
        if (printOneSubsequence(index+1, s, sum, arr, list) == true) {
            return true;
        }

        list.remove(list.size()-1);
        s -= arr[index];
        if (printOneSubsequence(index+1, s, sum, arr, list) == true) {
            return true;
        }

        return false;
    }

    static void printSubsequence(int index, int s, int sum, int[] arr, ArrayList<Integer> list) {
        if (index >= arr.length) {
            if (s == sum)
                System.out.println(list);
            return;
        }

        list.add(arr[index]);
        s += arr[index];
        printSubsequence(index+1, s, sum, arr, list);

        list.remove(list.size()-1);
        s -= arr[index];
        printSubsequence(index+1, s, sum, arr, list);
    }
}
